(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{344:function(t,v,n){t.exports=n.p+"assets/img/image-20200830153543849.84e3561c.png"},345:function(t,v,n){t.exports=n.p+"assets/img/image-20200830153919220.d12d2139.png"},449:function(t,v,n){"use strict";n.r(v);var _=n(10),a=Object(_.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"javascript学习"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#javascript学习"}},[t._v("#")]),t._v(" JavaScript学习")]),t._v(" "),_("h3",{attrs:{id:"ecmascript"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript"}},[t._v("#")]),t._v(" ECMAScript")]),t._v(" "),_("h3",{attrs:{id:"dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),_("h3",{attrs:{id:"bom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),_("h3",{attrs:{id:"document"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[t._v("#")]),t._v(" Document")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("一个Document相当于一个页面\nDocument.write() 写如body")])]),t._v(" "),_("li",[_("p",[t._v("JS代码按照顺序执行\n按照script  引入顺序执行")])]),t._v(" "),_("li",[_("p",[t._v("字面量和变量\n字面量是一些不可变的值\n变量可以保存字面量，可以任意改变\n使用var a； 来声明一个变量")])]),t._v(" "),_("li",[_("p",[t._v("标识符\n由我们自主命名\n可以由字母数字$_\n不可以是关键字")])]),t._v(" "),_("li",[_("p",[t._v("数据类型\nString Number Boolean Null Undeifined 基本类型\nObject 引用类型")])]),t._v(" "),_("li",[_("p",[t._v("typeof 检查并返回类型")])])]),t._v(" "),_("h2",{attrs:{id:"html"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),_("p",[t._v("w3c标准")]),t._v(" "),_("h3",{attrs:{id:"html简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html简介"}},[t._v("#")]),t._v(" Html简介")]),t._v(" "),_("h4",{attrs:{id:"html-结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#html-结构"}},[t._v("#")]),t._v(" html 结构")]),t._v(" "),_("p",[t._v("​\t<!DOCTYPE html> 默认以html5去解析")]),t._v(" "),_("p",[t._v("​\thead\n​\tbody")]),t._v(" "),_("p",[t._v("​\tdiv会换行     p  span用于行内布局")]),t._v(" "),_("p",[t._v("​\tscript")]),t._v(" "),_("h4",{attrs:{id:"标签（行标签和块标签）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#标签（行标签和块标签）"}},[t._v("#")]),t._v(" 标签（行标签和块标签）")]),t._v(" "),_("ul",[_("li",[t._v("p")])]),t._v(" "),_("p",[t._v("​\t\t"),_("code",[t._v('<p title= "" class ="" id = "">\t</p>')])]),t._v(" "),_("ul",[_("li",[_("p",[t._v("文本格式化标签\n<b\n<strong\n<i\n<em")]),t._v(" "),_("p",[t._v("<pre预格式化文本\n<small\n<sub 上标\n<sup  下标")])])]),t._v(" "),_("h4",{attrs:{id:"块级元素和行内元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#块级元素和行内元素"}},[t._v("#")]),t._v(" 块级元素和行内元素")]),t._v(" "),_("ul",[_("li",[t._v("块级元素：独占一行，可以设置宽度和高度，没有设置宽度没高度，默认铺满整行，\n块级元素可以包含块级元素和行级元素\n相当于display:block")]),t._v(" "),_("li",[t._v("行级元素：和相邻的行级元素占同一行，沾满之后自动换行，不能设置宽高，其内只能包含行级元素\n相当于 display: inline")])]),t._v(" "),_("h4",{attrs:{id:"w3c-world-wide-web"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#w3c-world-wide-web"}},[t._v("#")]),t._v(" W3C world wide web")]),t._v(" "),_("p",[t._v("结构、表现、行为")]),t._v(" "),_("ul",[_("li",[t._v("统一标准")]),t._v(" "),_("li",[t._v("标签嵌套规则\n行级元素不可嵌套块级元素\n块级元素不可放在p忠")]),t._v(" "),_("li",[t._v("语义化标签\np是段落标签\nul有序\nol无序\noption")])]),t._v(" "),_("h4",{attrs:{id:"标签属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#标签属性"}},[t._v("#")]),t._v(" 标签属性")]),t._v(" "),_("ul",[_("li",[t._v("id 规定元素的唯一id")]),t._v(" "),_("li",[t._v("class 规定元素的类名")]),t._v(" "),_("li",[t._v("style 规定元素的行内样式")]),t._v(" "),_("li",[t._v("title 规定元素的额外信息，当鼠标放在元素上的时候，提示文本内容")])]),t._v(" "),_("p",[t._v("自定义标签属性：data-*")]),t._v(" "),_("h4",{attrs:{id:"table属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#table属性"}},[t._v("#")]),t._v(" table属性")]),t._v(" "),_("ul",[_("li",[t._v("border:表格边框")]),t._v(" "),_("li",[t._v("width：表格宽度")]),t._v(" "),_("li",[t._v("align：表格对齐方式left center right")]),t._v(" "),_("li",[t._v("cellpadding:单元格文本与边框的距离")]),t._v(" "),_("li",[t._v("cellspacing:单元格边框间距")])]),t._v(" "),_("p",[t._v("完整表格:caption(标题) thead(表头) tbody(表体) tfoot（表尾）")]),t._v(" "),_("h4",{attrs:{id:"form"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#form"}},[t._v("#")]),t._v(" form")]),t._v(" "),_("ul",[_("li",[t._v("name:表单名称")]),t._v(" "),_("li",[t._v("action:表单提交数据的地方")]),t._v(" "),_("li",[t._v("method:")])]),t._v(" "),_("p",[t._v("表单元素：")]),t._v(" "),_("ul",[_("li",[t._v("input")]),t._v(" "),_("li",[t._v("textarea")]),t._v(" "),_("li",[t._v("select")]),t._v(" "),_("li",[t._v("button")])]),t._v(" "),_("h3",{attrs:{id:"bom和dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bom和dom"}},[t._v("#")]),t._v(" Bom和Dom")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("获取body下的所有节点\n"),_("strong",[t._v("var")]),t._v(' o = document.getElementsByTagName("body") [0].childNodes;  //获取body下所有子元素')])]),t._v(" "),_("li",[_("p",[t._v("通过id查找HTML元素\nvar element = document.getElementByid();")])]),t._v(" "),_("li",[_("p",[t._v('通过标签名查找HTML元素\nvar x = document.getElementsByTagName("p");')])]),t._v(" "),_("li",[_("p",[t._v('通过类名查找HTML元素\nvar element = document.getElementsByClassName("");')])]),t._v(" "),_("li",[_("p",[t._v("通过CSS选择器查找HTML元素（id、类名、类型、属性、属性值等等）\nvar element = document.querySelectorAll()")])]),t._v(" "),_("li",[_("p",[t._v("通过HTML对象选择器查找HTML对象")]),t._v(" "),_("p",[t._v("本例查找 id=\"frm1\" 的 form 元素，在 forms 集合中，然后显示所有元素值：var x = document.forms[''];")])])]),t._v(" "),_("h3",{attrs:{id:"对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("对象的分类\n内建对象\n宿主对象：由js运行环境提供的对象 如（BOM、Dom）\n自定义对象：开发人员自己创建")])]),t._v(" "),_("li",[_("p",[t._v('获取属性名\nvar obj = new Object();\nobj.name = "孙悟空";\n获取 obj.name   obj["name"]')])]),t._v(" "),_("li",[_("p",[t._v("基本数据类型和引用数据类型\n基本：String Number Boolean Null  undefined")])]),t._v(" "),_("li",[_("p",[t._v("对象字面量\nvar obj = {};")])]),t._v(" "),_("li",[_("p",[t._v("工厂方法创建对象\nfunction createObject(形参){")]),t._v(" "),_("p",[t._v("var obj = new Object();")]),t._v(" "),_("p",[t._v("​\tobj.")]),t._v(" "),_("p",[t._v("return obj;\n}")])]),t._v(" "),_("li",[_("p",[t._v("构造函数")]),t._v(" "),_("p",[t._v("构造函数执行流程:\n立刻创建新对象\n将新建的对象设置为函数中的this\n逐行执行函数中的代码\n将新建的对象作为返回值执行")]),t._v(" "),_("p",[t._v("function Obj(){//首字母大写")]),t._v(" "),_("p",[t._v('​\tthis.name = "属性";//this就是新建的对象\n}\nvar obj = new Obj();')]),t._v(" "),_("p",[t._v("​\ta instanceof  b//判断a是b的实例")])]),t._v(" "),_("li",[_("p",[t._v("使用in可以检查属性中是否有某个属性   “属性”  in  obj == true\nhasOwnProperty()检查自身对象中是否包含某属性，不包括原型对象__proto__")])]),t._v(" "),_("li",[_("p",[t._v("Date对象标识时间\nvar date = new Date();\n日期的格式 月份/日/年 时:分:秒\ngetDate()获取当前日期对象时几日\ngetDay()获取星期几\ngetMonth()获取月份 +1")]),t._v(" "),_("p",[t._v("getFullYear()获取年份\ntime = Date.now()获取时间戳")])]),t._v(" "),_("li",[_("p",[t._v("Math\nMath封装了数学相关的属性和方法\nMath.abs()返回数的绝对值\nMa't'h.ceil()向上取整\nMath.floor()向下取整\nMath.round()四舍五入\nMath.random()随机生成\nMath.max() Math.min()")]),t._v(" "),_("p",[t._v("Math.pow(x,y)返回x的y次幂")])])]),t._v(" "),_("h3",{attrs:{id:"函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("介绍\n函数也是一个对象\n函数可以封装一个功能\n函数保存一些代码，在需要时执行")])]),t._v(" "),_("li",[_("p",[t._v("创建一个函数\nfunction 函数名 （形参1，形参2.。。。）{\n}\nvar fun = function(形参){//匿名函数\n}；\nreturn 设置返回值    var result = sum(1,2);\n实参可以是任何值（基本类型、对象、函数)\n返回值也可以是任何值\nfunction fun(){}\nfun是函数对象·\nfun()调用函数")]),t._v(" "),_("p",[t._v("（function(){//匿名函数或者叫做立即执行函数\n}）()")])]),t._v(" "),_("li",[_("p",[t._v("枚举对象中的属性")]),t._v(" "),_("p",[t._v("document\n使用for-in   语法：\nfor(var 变量 in 对象){}")])]),t._v(" "),_("li",[_("p",[t._v("prototype原型对象\n每个函数对象都有一个原型对象，\n如果函数作为普通函数调用，不起作用\n作为构造函数调用\n__proto__指向原型对象\n原型对象相当于一个共享区域，所有该对象都可访问\n对象的属性首先从该对象查找，如果没有去原型对象获取\n原型对象也有原型对象，直到找到object对象的原型")])]),t._v(" "),_("li",[_("p",[t._v("函数的方法\ncall()和apply() 函数对象的方法")]),t._v(" "),_("p",[t._v("a(){}   a.call()\n将执行的this\nfun.apply(obj)修改函数执行时的对象this\nfun.call(obj,a.b)后面作为实参传入\nfun.apply(obj,实参封装的参数)")])]),t._v(" "),_("li",[_("p",[t._v("调用函数时，浏览器每次会传两个隐含的参数\n函数的上下文对象this\n封装实参的对象arguments"),_("br"),t._v("\narguemnt是一个类数组对象，和数组很像，调用函数时的实参，都会在arguments中，arguments中可以获取实参\narguments[0]表示第一个实参，arguments.callee属性就是当前正在执行的函数")])])]),t._v(" "),_("h3",{attrs:{id:"作用域"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),_("p",[t._v("​    变量的作用范围")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",[_("code",[t._v("变量的声明提前：使用var 关键字，会在所有代码执行之前被声明\n函数的声明提前：function 函数名(){}会在所有代码执行之前声明，\n\t\tvar fun2 = function(){}使用函数表达式不会声明提前，及在函数声明前调用会报错\n")])])]),_("ul",[_("li",[t._v("全局作用域\n直接编写在script中的JS代码，页面打开时创建，页面关闭时销毁\n-全局作用贵有一个全局对象window，\n全乎作用域中，创建的对象都会做作为window对象的属性保存\n创建的函数作为window的方法保存")]),t._v(" "),_("li",[t._v("局部作用域")]),t._v(" "),_("li",[t._v("函数作用域\n调用函数是创建函数作用域，函数执行结束作用域销毁。每次调用创建一个作用域\n定义形参相当于在函数作用域中声明了变量\n如果函数中没有定义变量，使用的就是全局变量")])]),t._v(" "),_("h3",{attrs:{id:"this"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("解析器在每次调用函数时都会向内部调用一个隐含的参数（有浏览器传入）")]),t._v(" "),_("p",[t._v("this为函数执行的上下文对象\n根据函数的调用方式不同，this指向不同的对象")])]),t._v(" "),_("li",[_("p",[t._v("调用方式\n-函数方式调用  都为window\nfun(){\n}")]),t._v(" "),_("p",[t._v("-方法方式调用 为调用对象")])]),t._v(" "),_("li",[_("p",[t._v("构造函数中this\nthis就是构造函数创建的对象")])])]),t._v(" "),_("h3",{attrs:{id:"数组（array）"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组（array）"}},[t._v("#")]),t._v(" 数组（Array）")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("dwa\nvar arr = new Array();")]),t._v(" "),_("p",[t._v("数组[索引] = 值")])]),t._v(" "),_("li",[_("p",[t._v("数组.length获取数组长度（非连续获取的时最大索引）")])]),t._v(" "),_("li",[_("p",[t._v("数组的4个方法\npush向末尾添加元素并返回数组长度\npop删除数组的最后一个元素并返回删除元素")]),t._v(" "),_("p",[t._v("unshift（）像数组开头添加一个元素并返回数组长度\nshift（）删除数组的第一个元素并将删除的元素作为返回值")])]),t._v(" "),_("li",[_("p",[t._v("数组的遍历\nfor-i")]),t._v(" "),_("p",[t._v("for-each   ie8以上可以使用\narr.forEach(function(a,b){//第一个函数为正在遍历的元素。第一个元素是索引")]),t._v(" "),_("p",[t._v("})")])]),t._v(" "),_("li",[_("p",[t._v("常用方法\nslice(start，end)从某个数组返回指定的元素 end取不到\nsplice(start,end)删除指定区域元素"),_("br"),t._v('\narray.contract(）将两个数组连接成新数组，对原数组无影响\njoin将原数组转化为一个字符串，作为结果返回，join（）中可以将元素作为连接符连接 array.join("-")\nreverse（）数组反转，影响原数组\nsort() 默认按照unicode编码排序，数字排序可能会得到错误的结果\nsort(function(a,b){')]),t._v(" "),_("p",[t._v("​\t//大于0交换位置，小于不换位置\n})")])])]),t._v(" "),_("h3",{attrs:{id:"包装类"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#包装类"}},[t._v("#")]),t._v(" 包装类")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("String()  Number() Object()\n基本数据类型去调用方法或属性时，浏览器临时转换为对象")])]),t._v(" "),_("li",[_("p",[t._v("String对象方法\ncharAt()获取指定位置所在字符\ncharCodeAt()获取指定字符的字符编码\nfromCharCode（）可以根据字符编码获取字符")]),t._v(" "),_("p",[t._v("indexOf() 检索字符串中是否含有莫字符，返回第一次出现的索引 没有找到返回-1\nlastIndexOf()从后往前找\nslice（start,end）截取字符串,不会影响源字符串")]),t._v(" "),_("p",[t._v("如果省略都二个参数，截取后面所有\nsubString(start,end)\nsubStr(截取位置的索引，截取的长度)\nsplit()将字符串拆分为一个数组\ntoUpperCase()")])])]),t._v(" "),_("h3",{attrs:{id:"正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),_("ul",[_("li",[_("p",[t._v('创建\nvar reg = new RegExp("正则表达式","匹配模式");')]),t._v(" "),_("p",[t._v("reg.test(str)判断str中是否包含某个字符")])]),t._v(" "),_("li",[_("p",[t._v("匹配模式\ni 忽略大小写")]),t._v(" "),_("p",[t._v("g匹配全局模式")])]),t._v(" "),_("li",[_("p",[t._v("使用\nreg = a | b ;判断是否有a或b\nreg = [ab]   []里面的内容也是或关系   a-z为a到z   [A-z]所有")]),t._v(" "),_("p",[t._v("[a-z]所有小写字母\n[A-Z]所有大写字母\n[A-z]  所有字母\na[bde]c\n[^ab    除了ab以外")])]),t._v(" "),_("li",[_("p",[t._v("字符串和正则相关的方法\nsearch()   搜索字符串中是否含有指定内容，返回索引，支持正则表达式，只会查找第一个\nmatch()  找到一个或多个正则表达式的匹配，返回符合条件的内容，默认返回第一个符合条件的内容，可以设置为全局模式，返回的结果是一个数组")]),t._v(" "),_("p",[t._v("replace() 将字符串中指定内容替换为新内容")]),t._v(" "),_("p",[t._v("参数：1.被替换的内容 2.新内容")]),t._v(" "),_("p",[t._v("split()")])]),t._v(" "),_("li",[_("p",[t._v("量词\n通过量词设置一个此出现的次数\n两次只对前面第一个词起作用")]),t._v(" "),_("p",[t._v("var reg = /a{3}/;\nvar reg = /a{1,3}/;出1~3次\nvar reg = /a{3,}/出现3次以上\nn+至少一个 相当于{1，}\nn*包含零个或多个{0.}\nn? 包含零个或1个的字符串{0，1}\nvar reg = /^a/;以a开头\nvar reg = /a$/;以a结尾\n/^a$/以a开头，以a结尾")]),t._v(" "),_("p",[t._v("检查手机的正则：以1开头  第二位3-9 第三位以后任意数字9个\n1^[3-9] [0-9]{9}$\n含有.\n.在正则表达式中表示任意字符\nvar reg = / \\ ./;使用\\表达转义\n\\ \\表示转义\n构造函数中，因为传入的是字符串，会进行转义，所以使用\\反斜杠，需要用两个反斜杠")]),t._v(" "),_("ul",[_("li",[t._v('\\w  任意字母、数字、下划线\n\\W 除了字母、数字、下划线\n\\d 任意数字\n\\D 除了数字\n\\s 空格\n\\S 除了空格\n\\b 单词边界\n\\B 除了单词边界 var reg = /\\bchild\\b/; "hello child" true   "hello children" false')])])]),t._v(" "),_("li",[_("p",[t._v('去除字符串前后空格\nstr = str.replace(/\\s/g,"");//去所有的')]),t._v(" "),_("p",[t._v('str = str.replace(/^\\s*/,"") ;//去开头的\nstr = str.replace(/\\s * {$},"");//去结尾的\nstr = str.replace(/^\\s * | \\s*$/g,"");//去开头和结尾的')]),t._v(" "),_("p",[t._v("电子邮件\n任意字母数字下划线 + @ + 任意字母")]),t._v(" "),_("p",[t._v("^\\w{3,}(\\ . \\ w+)* @ [A-z0-9]+ (\\ .[A-z]{2,5}){1,2} $\n()选定 []或 {}量词")])])]),t._v(" "),_("h3",{attrs:{id:"dom-文档对象模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dom-文档对象模型"}},[t._v("#")]),t._v(" Dom 文档对象模型")]),t._v(" "),_("p",[t._v("​\t通过document来操作网页")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("文档、对象、模型\n"),_("img",{attrs:{src:n(344),alt:"image-20200830153543849"}})])]),t._v(" "),_("li",[_("p",[t._v("Node\n网页的每一个元素都是节点\n常用节点类型：\n文档节点 整个html文档\n元素节点 html文档中的标签节点\n属性节点 元素的属性\n文本节点 html标签中的文本\n"),_("img",{attrs:{src:n(345),alt:"image-20200830153919220"}}),t._v('\n< button id = "btn">nihao <  /button >\nvar btn= document.getElementById("btn");//获取btn元素\nbtn.innerHtml = "hello"; //设置里面的内容')])]),t._v(" "),_("li",[_("p",[t._v("事件")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("文档或浏览器发生交互的特定瞬间")])]),t._v(" "),_("li",[_("p",[t._v("js和html之间的交互是通过事件实现的")])]),t._v(" "),_("li",[_("p",[t._v("比如 点击某个元素，将鼠标移到某个元素上方，按下键盘的某个键等")]),t._v(" "),_("ul",[_("li",[t._v('onclick = ""点击')]),t._v(" "),_("li",[t._v("onmousemove= 鼠标移动")])])]),t._v(" "),_("li",[_("p",[t._v("通过对象绑定事件")]),t._v(" "),_("p",[t._v('var btn = document.getElementById("btn");')]),t._v(" "),_("p",[t._v("btn.onclick = function(){//响应函数} //绑定一个单击击事件")]),t._v(" "),_("p",[t._v("btn.ondbclick = function(){//响应函数}//绑定双击事件")])]),t._v(" "),_("li",[_("p",[t._v("文档的加载")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("浏览器加载页面的顺序，按照自上往下加载，读取一行运行一行")])]),t._v(" "),_("li",[_("p",[t._v("将js在页面后面，确保加载完页面之后执行js")])]),t._v(" "),_("li",[_("p",[t._v("onload事件会在整个页面加载之后触发")]),t._v(" "),_("ul",[_("li",[t._v("支持该事件的js对象 image、layer、window")])])])])]),t._v(" "),_("li",[_("p",[t._v("获取元素（标签）节点")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("getElementById() //通过id查询")])]),t._v(" "),_("li",[_("p",[t._v("getElementsByTagName()//通过tagname查询")])]),t._v(" "),_("li",[_("p",[t._v("getElemetnByName()//通过name查询")]),t._v(" "),_("p",[t._v("innerHtml用于获取标签内部的html内容，")]),t._v(" "),_("p",[t._v("自结束标配：Input标签没有内部，\n通过array [ index ].属性名     获取属性；读取class时要用className")])])])]),t._v(" "),_("li",[_("p",[t._v("获取元素节点的子节点")]),t._v(" "),_("ul",[_("li",[t._v("方法\n"),_("ul",[_("li",[t._v("getElementsByTagName()")])])]),t._v(" "),_("li",[t._v("属性（节点是包含空白文本的）\n"),_("ul",[_("li",[t._v("childeNodes 表示当前节点的所有子节点\n"),_("ul",[_("li",[t._v("获取包括文本节点在内的所有子节点，dom标签间的空白文本也为节点，ie8没有计算空白文本，其他浏览器是计算的")])])]),t._v(" "),_("li",[t._v("childern 获取当前元素的所有子元素（不包括空白文本）")]),t._v(" "),_("li",[t._v("firstElementChild获取当前元素的第一个子元素（不包含空白文本）ie8及以下不支持")]),t._v(" "),_("li",[t._v("firstChild获取当前元素的第一个子节点（包括空白文本）")]),t._v(" "),_("li",[t._v("lastChild获取当前节点的最后一个节点")]),t._v(" "),_("li",[t._v("parentNode 当前的父亲节点")]),t._v(" "),_("li",[t._v("previousSibling 当前节点的前一个兄弟节点")]),t._v(" "),_("li",[t._v("nextSibling当前节点的后一个兄弟节点")])])])])])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);